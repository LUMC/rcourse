% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Course.R
\docType{class}
\name{Course}
\alias{Course}
\title{Class to build a web-site with rmarkdown rendering functionalities.}
\format{An \code{\link{R6Class}} generator object}
\description{
The class generates a web-site based on the Rmd files in the directory 'site'. The directory has a flat structure 
and contains several categories of files:

\describe{
  \item{\strong{_site.yml}}{This file in YAML format describing the structure and the look of the site with menues and sub-menus.}
  \item{\strong{_schedule.yml}}{This file contains information about the course (see details).}
  \item{\strong{<module-name>.Rmd}}{These files contain the course material on a specific topic.}
  \item{\strong{_<name>.Rmd}}{These Rmd files can be re-used and are called from inside other Rmd files. They do not have a html 
  counterpart in the _site directory.}   
  \item{\strong{data and images}}{ These directories are copied into _site directory}
  \item{\strong{footer.html}}{Footer content for all pages.}
  \item{\strong{setup.R}}{This is needed if the individual Rmd files need to be generated inside RStudio using the 'knit' button.}
  \item{\strong{Styles.css}}{Stylesheet file for the appearance}
}

The files prefixed with \strong{_} will not be rendered and are for internal use.
}
\details{
The \strong{schdule} file has the following structure:

\preformatted{
   course:
       title: <course-title>
       start: <start-date>
       end: <end-date>
       exam: 
           date: <exam-date>
           time: <time-time>
           venue: <venue>
       slots:
           <slot-id>:
               title:  <session-title>
               subtitle: <session-subtitle>
               goal: <goals/description>
               date: <session-date>
               time: <session-time>
               venue: <venue>
               tasks : "yes | no"     
           <slot-id>:
               ...
}
}
\section{Methods}{

}

\examples{
rcourse <- Course$new()
rcourse$view()

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Course$new()}}
\item \href{#method-src}{\code{Course$src()}}
\item \href{#method-clear_nocode_html}{\code{Course$clear_nocode_html()}}
\item \href{#method-render}{\code{Course$render()}}
\item \href{#method-site}{\code{Course$site()}}
\item \href{#method-url}{\code{Course$url()}}
\item \href{#method-view}{\code{Course$view()}}
\item \href{#method-summary}{\code{Course$summary()}}
\item \href{#method-schedule}{\code{Course$schedule()}}
\item \href{#method-slots}{\code{Course$slots()}}
\item \href{#method-lstmod}{\code{Course$lstmod()}}
\item \href{#method-listing}{\code{Course$listing()}}
\item \href{#method-zip}{\code{Course$zip()}}
\item \href{#method-clone}{\code{Course$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Instantiates a 'Course' object. It will load _schedule.yml 
and renders the site for the default course (see current tag in _schedule.yml)..
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$new(site = "site", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{site}}{name of the course, create it if it does not exist, otherwise instantiate it.}

\item{\code{...}}{arguments to rmarkdown::render_site}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-src"></a>}}
\subsection{Method \code{src()}}{
Path to site's directory containing all Rmd files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$src()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clear_nocode_html"></a>}}
\subsection{Method \code{clear_nocode_html()}}{
clear generated nocode html file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$clear_nocode_html()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-render"></a>}}
\subsection{Method \code{render()}}{
Render the site only for modified Rmd's.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$render(clean = FALSE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{clean}}{If true the clean the site first.}

\item{\code{...}}{arguments to rmarkdown::render_site}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-site"></a>}}
\subsection{Method \code{site()}}{
Return the path to site's directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$site()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-url"></a>}}
\subsection{Method \code{url()}}{
Return the path to site's index.html
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$url()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-view"></a>}}
\subsection{Method \code{view()}}{
View the site in the browser.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$view()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\subsection{Method \code{summary()}}{
Print the 'current' course summary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-schedule"></a>}}
\subsection{Method \code{schedule()}}{
Edit '_schedule.yml'. Render the pages by render() to enforce the changes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$schedule()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-slots"></a>}}
\subsection{Method \code{slots()}}{
Returns the list of course slots. The data is taken from '_schedule.yml'.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$slots()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-lstmod"></a>}}
\subsection{Method \code{lstmod()}}{
Returns the list of modified files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$lstmod()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-listing"></a>}}
\subsection{Method \code{listing()}}{
Returns the list of files for zip archive.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$listing()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-zip"></a>}}
\subsection{Method \code{zip()}}{
Create a zip archive.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$zip(filename = "RCourse.zip")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{name of zip archive.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Course$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
